{% extends 'layout.html.twig' %}

{% block body %}
<h1>Geocoder as a Service</h1>

<p>
    The power of <a href="http://geocoder-php.org/Geocoder/">Geocoder</a> exposed in an API.
</p>

<p>
    <a href="https://travis-ci.org/K-Phoen/gaas"><img src="https://travis-ci.org/K-Phoen/gaas.png?branch=master" alt="Build Status" style="max-width:100%;" /></a>
</p>

<h2>Usage</h2>

<p>
    You can use AJAX or another method to call the API and geocode addresses.
</p>

<pre><code>$.ajax({
    url: '{{ app.url_generator.generate('api_location', {}, true) }}',
    data: {address: '36 Quai des Orfèvres, Paris, France'},
    dataType: 'json',
    success: function(data) {
        console.log(data);
    }
});
</code></pre>

<h3>Geocoding an address</h3>

A street address can be geocoded using the "<code>address</code>" GET parameter:

<pre><code>{{ app.url_generator.generate('api_location') }}?<strong>address=36 Quai des Orfèvres, Paris, France</strong></code></pre>

<h3>Geocoding an IP</h3>

A IP address can be geocoded using the "<code>ip</code>" GET parameter:

<pre><code>{{ app.url_generator.generate('api_location') }}?<strong>ip=8.8.8.8</strong></code></pre>

<h3>Reversing coordinates</h3>

Coordinates can be reversed using the "<code>latitude</code>" and
"<strong>longitude</strong>" GET parameters:

<pre><code>{{ app.url_generator.generate('api_location') }}?<strong>latitude=48.8552897&amp;longitude=2.3433325</strong></code></pre>


<h2>Results</h2>

By default, the location data returned by the API respects the following
structure:

<pre><code>{
    "result": {
        "latitude": 48.8552897,
        "longitude": 2.3433325,
        "bounds": {
            "south": 48.8552897,
            "west": 2.3433325,
            "north": 48.8552897,
            "east": 2.3433325
        },
        "streetNumber": "36",
        "streetName": "Quai Des Orfèvres",
        "zipcode": "75001",
        "city": "Paris",
        "cityDistrict": "1St Arrondissement Of Paris",
        "county": "Paris",
        "countyCode": "75",
        "region": "Île-De-France",
        "regionCode": "IDF",
        "country": "France",
        "countryCode": "FR",
        "timezone": null
    }
}
</code></pre>

<h2>Providers</h2>

<p>
    Right now, only the providers not requiring any API key are supported. For
    any request, the provider to use can be specified using the "<code>provider</code>" GET
    parameter:
</p>

<pre><code>{{ app.url_generator.generate('api_location') }}?<strong>provider=google_maps</strong>&amp;address=...</code></pre>

<p>
    By default, the "<code>chain</code>" — configured with all the available
    providers — provider is used.
</p>

<p>
    See <a href="http://geocoder-php.org/Geocoder/">the Geocoder documentation</a>
    for a list of available adapters and providers.
</p>

<p>
    <strong>N.B:</strong> The provider used for the query is returned in the
    <code>X-Provider</code> header.
</p>

<h2>Results formatting</h2>

<p>
    How results are formatted is determined by the "<code>Accept</code>"
    header's content. We use <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec12.html">content negotiation</a>
    to choose the best way to format results for a request.
</p>

<p>
    Here is a map of the supported "<code>Accept</code>" headers values and
    their formatting:
</p>

<table>
    <thead>
        <tr>
            <th>Accept headers</th>
            <th>Format</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>
                <code>application/json</code><br />
                <code>application/x-json</code>
            </td>
            <td>JSON</td>
        </tr>
        <tr>
            <td>
                <code>text/xml</code><br />
                <code>application/xml</code><br />
                <code>application/x-xml</code>
            </td>
            <td>XML</td>
        </tr>
        <tr>
            <td>
                <code>application/geo+json</code>
            </td>
            <td><a href="http://geojson.org/">GeoJSON</a></td>
        </tr>
        <tr>
            <td>
                <code>application/gpx+xml</code>
            </td>
            <td><a href="http://www.topografix.com/gpx.asp">GPX</a></td>
        </tr>
        <tr>
            <td>
                <code>application/vnd.google-earth.kml+xml</code><br />
                <code>application/vnd.google-earth.kmz</code>
            </td>
            <td><a href="http://en.wikipedia.org/wiki/Keyhole_Markup_Language">KML</a></td>
        </tr>
        <tr>
            <td>
                <code>application/octet-stream+wkb</code>
            </td>
            <td><a href="http://en.wikipedia.org/wiki/Well-known_text">WKB</a></td>
        </tr>
        <tr>
            <td>
                <code>text/plain+wkt</code>
            </td>
            <td><a href="http://en.wikipedia.org/wiki/Well-known_text">WKT</a></td>
        </tr>
    </tbody>
</table>

<h2>Licence</h2>

<p>
    Geocoder as a Service is released under the MIT License. See the bundled
    LICENSE file for details.
</p>

{% endblock %}
